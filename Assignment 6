The points are not blue because the color should be specified without quotes. Instead of "blue", it should be just color = blue.
The categorical variables in mpg are class, drv, fl, trans, and year. The continuous variables are displ, cyl, cty, and hwy. Mapping a continuous variable to color will result in a gradient from low to high values, mapping to size will change the size of the points based on the variable value, mapping to transparency will make the points more or less opaque based on the variable value, and mapping to shape will change the shape of the points based on the variable value. For categorical variables, the color, size, transparency, and shape aesthetics will assign different values to different categories.
Mapping the same variable to multiple aesthetics can change the appearance of the plot. For example, mapping displ to both x-axis and color will create a plot where the points are colored based on their displ value, creating a legend that shows the range of values in the variable.
The stroke aesthetic sets the width of the outline of the points. It is used with geom_point() to add an outline to the points.
Mapping an aesthetic to something other than a variable name, like aes(color = displ < 5), creates a conditional mapping where the variable is first transformed by the condition (in this case, whether it's less than 5), and then the resulting boolean value is mapped to the aesthetic.
Faceting on a continuous variable creates separate panels for each unique value of the variable. This can result in a large number of panels and a cluttered plot, and it is generally not recommended.
The first code creates a scatter plot of displ versus hwy, with separate panels for each unique value of drv. The . means to facet on all other variables in the data frame (in this case, just class). The second code creates a scatter plot of displ versus hwy, with separate panels for each unique value of cyl. The . means to facet on nothing.
show.legend = FALSE removes the legend for the plot. If it is removed, the legend will be displayed by default.
The two graphs will look the same because they use the same data and the same mapping for x and y. The only difference is how the data and mapping are specified.
The problem with this plot is that it is not clear what the points represent. Adding a label or a legend could make the plot more informative. For example, adding mapping = aes(color = class) would color the points based on the vehicle class, and adding labs(x = "City MPG", y = "Highway MPG") would label the axes.
